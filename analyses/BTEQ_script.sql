bteq << EOF > $1;

.RUN FILE /etl/ST/CDM/LOGON/CDM_EDM/CDM_LOGON;

SET QUERY_BAND = 'APP =HL7_ETL ; JOB = ${JOBNAME}; TABLE=${NCR_TGT_SCHEMA}.ENCNT_DTL;' FOR SESSION;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('${NCR_HL7_STG_SCHEMA}','HL7_MSH ');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('${NCR_HL7_STG_SCHEMA}','HL7_PV1');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('${NCR_HL7_STG_SCHEMA}','HL7_PV2');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK
	(
	MESSAGE_CONTROL_ID,
	MESSAGE_DATE_TIME,
	PATIENT_ACCOUNT_NUM,
	MEDICAL_RECORD_NUM,
	MEDICAL_RECORD_URN,
	SENDING_FACILITY,
	SOURCE_INTERFACE,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
	)

SELECT 	
	MSH.MESSAGE_CONTROL_ID AS MESSAGE_CONTROL_ID,
	MSH.MESSAGE_DATE_TIME AS MESSAGE_DATE_TIME,
	MSH.PATIENT_ACCOUNT_NUM AS PATIENT_ACCOUNT_NUM,
	MSH.MEDICAL_RECORD_NUM AS MEDICAL_RECORD_NUM,
	MSH.MEDICAL_RECORD_URN AS MEDICAL_RECORD_URN,
	MSH.SENDING_FACILITY AS SENDING_FACILITY,
	MSH.SOURCE_INTERFACE AS SOURCE_INTERFACE,
	MSH.MESSAGE_TYPE_TRIGGER_EVENT AS MESSAGE_TYPE_TRIGGER_EVENT,
	CURRENT_TIMESTAMP(0) AS DW_INSRT_TS
FROM EDWHL7_STAGING_VIEWS.HL7_MSH MSH 
WHERE 
	MSH.MESSAGE_TYPE='ADT' 
   	AND MSH.DW_INSRT_TS BETWEEN 
	COALESCE((SELECT MAX(JOB_START_DATE_TIME)  - INTERVAL '2' HOUR FROM ${NCR_AC_VIEW}.ETL_JOB_RUN WHERE JOB_NAME='${JOBNAME}' AND JOB_STATUS_CODE=0 ), 
	CAST('1900-01-01 00:00:00' AS TIMESTAMP(0) FORMAT 'YYYY-MM-DD-HH.MI.SS'))
	AND (SELECT COALESCE(MAX(JOB_START_DATE_TIME),CURRENT_TIMESTAMP(0)) FROM ${NCR_AC_VIEW}.ETL_JOB_RUN WHERE JOB_NAME='${JOBNAME}' AND JOB_STATUS_CODE IS NULL)
	AND MSH.MESSAGE_DATE_TIME <> '0'
	AND MESSAGE_TYPE_TRIGGER_EVENT NOT IN ('A17','A29','A31','A60')
	AND MSH.SOURCE_INTERFACE <> 'EPIC' 
GROUP BY 
    MSH.MESSAGE_CONTROL_ID,
	MSH.MESSAGE_DATE_TIME,
	MSH.PATIENT_ACCOUNT_NUM,
	MSH.MEDICAL_RECORD_NUM,
	MSH.MEDICAL_RECORD_URN,
	MSH.SENDING_FACILITY,
	MSH.SOURCE_INTERFACE,
	MSH.MESSAGE_TYPE_TRIGGER_EVENT
;


.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

--ADDED as part of NDS-589

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK
	(
	MESSAGE_CONTROL_ID,
	MESSAGE_DATE_TIME,
	PATIENT_ACCOUNT_NUM,
	MEDICAL_RECORD_NUM,
	MEDICAL_RECORD_URN,
	SENDING_FACILITY,
	SOURCE_INTERFACE,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
	)

SELECT 	
	MSH.MESSAGE_CONTROL_ID AS MESSAGE_CONTROL_ID,
	MSH.MESSAGE_DATE_TIME AS MESSAGE_DATE_TIME,
	MSH.PATIENT_ACCOUNT_NUM AS PATIENT_ACCOUNT_NUM,
	MSH.MEDICAL_RECORD_NUM AS MEDICAL_RECORD_NUM,
	MSH.MEDICAL_RECORD_URN AS MEDICAL_RECORD_URN,
	MSH.SENDING_FACILITY AS SENDING_FACILITY,
	MSH.SOURCE_INTERFACE AS SOURCE_INTERFACE,
	MSH.MESSAGE_TYPE_TRIGGER_EVENT AS MESSAGE_TYPE_TRIGGER_EVENT,
	CURRENT_TIMESTAMP(0) AS DW_INSRT_TS
FROM EDWHL7_STAGING_VIEWS.HL7_MSH MSH
 
 LEFT OUTER JOIN 
      (sel message_control_id, max(OBSV_VALUE_Text) OBX_CSN from edwhl7_staging_views.hl7_obx 
         where source_interface = 'Epic' and value_type = 'NM' and obsv_id_id = 'PRICSN' and message_type = 'ADT'
           and obsv_value_Text is not null
         group by 1) OBX
    ON MSH.MESSAGE_CONTROL_ID=OBX.MESSAGE_CONTROL_ID 

 LEFT OUTER JOIN 
      (sel message_control_id, max(visit_num_id_num) PV1_CSN from edwhl7_staging_views.hl7_pv1 
         where source_interface = 'Epic' and message_type = 'ADT'
           and visit_num_id_num is not null
         group by 1) PV1
    ON MSH.MESSAGE_CONTROL_ID=PV1.MESSAGE_CONTROL_ID   
WHERE 
	MSH.MESSAGE_TYPE='ADT' 
   	AND MSH.DW_INSRT_TS BETWEEN 
	COALESCE((SELECT MAX(JOB_START_DATE_TIME)  - INTERVAL '2' HOUR FROM ${NCR_AC_VIEW}.ETL_JOB_RUN WHERE JOB_NAME='${JOBNAME}' AND JOB_STATUS_CODE=0 ), 
	CAST('1900-01-01 00:00:00' AS TIMESTAMP(0) FORMAT 'YYYY-MM-DD-HH.MI.SS'))
	AND (SELECT COALESCE(MAX(JOB_START_DATE_TIME),CURRENT_TIMESTAMP(0)) FROM ${NCR_AC_VIEW}.ETL_JOB_RUN WHERE JOB_NAME='${JOBNAME}' AND JOB_STATUS_CODE IS NULL)
	AND MSH.MESSAGE_DATE_TIME <> '0'
	AND MESSAGE_TYPE_TRIGGER_EVENT NOT IN ('A17','A29','A31','A60')
	AND MSH.SOURCE_INTERFACE = 'EPIC' 
	AND PV1.PV1_CSN = OBX.OBX_CSN
GROUP BY 
    MSH.MESSAGE_CONTROL_ID,
	MSH.MESSAGE_DATE_TIME,
	MSH.PATIENT_ACCOUNT_NUM,
	MSH.MEDICAL_RECORD_NUM,
	MSH.MEDICAL_RECORD_URN,
	MSH.SENDING_FACILITY,
	MSH.SOURCE_INTERFACE,
	MSH.MESSAGE_TYPE_TRIGGER_EVENT
;


.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK
	(
	MESSAGE_CONTROL_ID,
	MESSAGE_DATE_TIME,
	PATIENT_ACCOUNT_NUM,
	MEDICAL_RECORD_NUM,
	MEDICAL_RECORD_URN,
	SENDING_FACILITY,
	SOURCE_INTERFACE,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
	)

SELECT  
	SRC_MESSAGE_CONTROL_ID AS MESSAGE_CONTROL_ID,
	SRC_MESSAGE_DATE_TIME AS MESSAGE_DATE_TIME,
	SRC_PATIENT_ACCOUNT_NUM AS PATIENT_ACCOUNT_NUM,
	SRC_MEDICAL_RECORD_NUM AS MEDICAL_RECORD_NUM,
	SRC_MEDICAL_RECORD_URN AS MEDICAL_RECORD_URN,
	SRC_SENDING_FACILITY AS SENDING_FACILITY,
	SRC_SOURCE_INTERFACE AS SOURCE_INTERFACE,
	SRC_MESSAGE_TYPE_TRIGGER_EVENT AS MESSAGE_TYPE_TRIGGER_EVENT,
	MIN(DW_INSRT_TS) AS DW_INSRT_TS
	FROM EDWCDM_STAGING.ENCNT_DTL_C WHERE REPROCESS_IND='0' 
	AND SRC_MESSAGE_CONTROL_ID NOT IN ( SELECT MESSAGE_CONTROL_ID FROM EDWCDM_STAGING.ENCNT_DTL_WRK )
GROUP BY 
	SRC_MESSAGE_CONTROL_ID,
	SRC_MESSAGE_DATE_TIME,
	SRC_PATIENT_ACCOUNT_NUM,
	SRC_MEDICAL_RECORD_NUM,
	SRC_MEDICAL_RECORD_URN,
	SRC_SENDING_FACILITY,
	SRC_SOURCE_INTERFACE,
	MESSAGE_TYPE_TRIGGER_EVENT
	;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK');

--GET ALL THE LOOKPS FOR SKS

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK1;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK1
(
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_CONTROL_ID,
	MESSAGE_DATE_TIME,
	PATIENT_ACCOUNT_NUM,
	MEDICAL_RECORD_NUM,
	MEDICAL_RECORD_URN,
	SENDING_FACILITY,
	SOURCE_INTERFACE,
	MESSAGE_TYPE_TRIGGER_EVENT,	
	DW_INSRT_TS
)

SELECT 
DISTINCT 
	CAST(CLAC.ENCNT_SK AS DECIMAL(18,0)) AS ENCNT_SK,
	--CAST (MSH.MESSAGE_DATE_TIME AS TIMESTAMP(6) FORMAT 'YYYY-MM-DD-HH.MI.SS.S(6)') AS VLD_FR_TS, Commented to handle Epic duplication issue due to multiple A03
        CAST (SUBSTR(MSH.MESSAGE_DATE_TIME,1,19) AS TIMESTAMP(6) FORMAT 'YYYY-MM-DD-HH.MI.SS.S(6)') AS VLD_FR_TS,
	CAST (CLAC.PATIENT_DW_ID  AS DECIMAL(18,0))AS PATIENT_DW_ID,
	CAST(REGEXP_REPLACE(TRIM(MSH.PATIENT_ACCOUNT_NUM),'[^0-9]','') AS DECIMAL(12,0)) AS PAT_ACCT_NUM,
	CLAC.COMPANY_CODE AS COMPANY_CODE,
	CLAC.COID AS COID,
	CAST('9999-12-31 00:00:00.000000' AS TIMESTAMP(6)) AS VLD_TO_TS,
	---CAST (SUBSTR(MSH.MESSAGE_DATE_TIME,1,19) AS TIMESTAMP(0) FORMAT 'YYYY-MM-DDBHH:MI:SS') AS ENCNT_TS,  --KHUDAVAN COMMENTED ON 20180507 ETE-222
	CASE WHEN CHAR_LENGTH(TRIM(PV1.ADMIT_DATE_TIME)) <8 THEN NULL
				ELSE	CAST(RPAD(PV1.ADMIT_DATE_TIME ,14,'0') AS TIMESTAMP(0) FORMAT 'YYYYMMDDHHMISS') END   AS ENCNT_TS,
	MSH.PATIENT_ACCOUNT_NUM AS ENCNT_ID_TXT,
	Case When MSH.SOURCE_INTERFACE = 'EPIC'  Then PV1.visit_num_id_num 
	     When MSH.SOURCE_INTERFACE = 'Cerner' Then OBX.Obsv_Value_Text
	     Else NULL End AS ALT_ENCNT_TXT,
	CASE WHEN PV1.MESSAGE_CONTROL_ID IS NOT NULL THEN CAST(CODE_VST_TYPE.CD_SK  AS INTEGER) ELSE NULL END AS VST_TYPE_CD_SK,
	MSH.MEDICAL_RECORD_NUM AS EHR_MED_REC_NUM,
	MSH.PATIENT_ACCOUNT_NUM  AS EHR_PAT_ACCT_NUM,
	Case When MSH.Source_Interface = 'Cerner' And MSH.Sending_Facility <> 'COCCMH' Then PID.alternate_patient_id_id_num Else MSH.MEDICAL_RECORD_URN End AS EHR_MED_URN,
	CASE WHEN PV1.MESSAGE_CONTROL_ID IS NOT NULL THEN CAST(CODE_PT_OF_ORIG.CD_SK AS INTEGER) ELSE NULL  END AS PT_OF_ORIG_CD_SK,
	--CASE WHEN PV2.MESSAGE_CONTROL_ID IS NOT NULL THEN CAST(CODE_ARRV_MODE.CD_SK  AS INTEGER) ELSE NULL END AS ARRV_MODE_CD_SK,
	CASE WHEN PV2.MESSAGE_CONTROL_ID IS NOT NULL THEN CAST(CODE_ARRV_MODE.CD_SK  AS INTEGER) ELSE 0 END AS ARRV_MODE_CD_SK, 
	PV1.ADMISSION_TYPE_ID AS ADMT_TYPE_REF_CD,
	CASE WHEN CHAR_LENGTH(TRIM(PV1.ADMIT_DATE_TIME)) <8 THEN NULL
				ELSE	CAST(RPAD(PV1.ADMIT_DATE_TIME ,14,'0') AS TIMESTAMP(0) FORMAT 'YYYYMMDDHHMISS') END    AS ADMT_TS,
	CASE WHEN MSH.SOURCE_INTERFACE IN ('CERNER','EPIC') THEN PV2.ADMIT_REASON_TEXT ELSE PV2.ADMIT_REASON_ID END AS ADMT_CMPLN_TXT,
	NULL AS RE_ADMT_IND,
	CASE WHEN PV1.MESSAGE_CONTROL_ID IS NOT NULL THEN CAST( CODE_CNF.CD_SK  AS INTEGER) ELSE NULL  END AS CNFD_CD_SK,
	--CODE_CNF.CD_SK AS CNFD_CD_SK,
	CASE WHEN PV1.MESSAGE_CONTROL_ID IS NOT NULL THEN CAST( CODE_HSPTL.CD_SK  AS INTEGER) ELSE NULL  END AS HSPTL_SRVC_CD_SK,
	--CODE_HSPTL.CD_SK AS HSPTL_SRVC_CD_SK,
	CAST(IN1.SET_ID AS INTEGER) AS EXPCT_NUM_OF_INS_PLAN_CNT,
	CASE WHEN PV2.SOURCE_INTERFACE IN ('MEDITECH 6.0', 'EXPANSE') THEN PV2.ACTUAL_LENGTH_OF_INPATIENT_STAY
			   WHEN PV1.ADMIT_DATE_TIME IS NOT NULL AND CHAR_LENGTH(TRIM(PV1.ADMIT_DATE_TIME)) >= 8 AND PV1.DISCHARGE_DATE_TIME IS NOT NULL AND CHAR_LENGTH(TRIM(PV1.DISCHARGE_DATE_TIME)) >= 8  THEN
				CAST(SUBSTR(TRIM(PV1.DISCHARGE_DATE_TIME),1,8) AS DATE FORMAT 'YYYYMMDD') - CAST(SUBSTR(TRIM(PV1.ADMIT_DATE_TIME),1,8) AS DATE FORMAT 'YYYYMMDD') 
	END AS ACTL_LEN_OF_STAY_DYS_CNT,	
	NULL AS EMPMNT_ILLNS_IND,
	NULL AS ACDNT_AUTO_ST_CD,
	NULL AS ACDNT_TYPE_REF_CD,
	NULL AS ACDNT_TS,
	CASE WHEN (MSH.SOURCE_INTERFACE='MEDITECH 5.6' OR MSH.SOURCE_INTERFACE='MEDITECH 6.0' OR MSH.SOURCE_INTERFACE='EXPANSE') THEN
					CASE WHEN (TRIM(COALESCE(PV1.ACCOUNT_STATUS_ID,'~~')) NOT IN ('DIS','DEP') OR CHAR_LENGTH(TRIM(PV1.DISCHARGE_DATE_TIME)) <8) THEN NULL
							ELSE	CAST(RPAD(PV1.DISCHARGE_DATE_TIME,14,'0') AS TIMESTAMP(0) FORMAT 'YYYYMMDDHHMISS') END 
		ELSE 	CASE WHEN CHAR_LENGTH(TRIM(PV1.DISCHARGE_DATE_TIME)) <8 THEN NULL ELSE	CAST(RPAD(PV1.DISCHARGE_DATE_TIME,14,'0') AS TIMESTAMP(0) FORMAT 'YYYYMMDDHHMISS') END
		END	AS DSCRG_TS,
	CASE WHEN (MSH.SOURCE_INTERFACE='MEDITECH 5.6' OR MSH.SOURCE_INTERFACE='MEDITECH 6.0' OR MSH.SOURCE_INTERFACE='EXPANSE') THEN
					CASE  WHEN PV1.MESSAGE_CONTROL_ID IS NOT NULL AND (TRIM(COALESCE(PV1.ACCOUNT_STATUS_ID,'~~')) NOT IN ('DIS','DEP') OR CHAR_LENGTH(TRIM(COALESCE(PV1.DISCHARGE_DATE_TIME,''))) <8) THEN 0 					
	   					WHEN PV1.MESSAGE_CONTROL_ID IS NOT NULL AND TRIM(COALESCE(PV1.ACCOUNT_STATUS_ID,'~~')) IN ('DIS','DEP') AND CHAR_LENGTH(TRIM(PV1.DISCHARGE_DATE_TIME)) >=8 THEN CODE_DSCRG_STS.CD_SK 
			   					ELSE NULL END 
		ELSE CASE WHEN PV1.MESSAGE_CONTROL_ID IS NOT NULL THEN CODE_DSCRG_STS.CD_SK ELSE NULL END 		
		END AS DSCRG_STS_CD_SK,
		
	CASE WHEN CHAR_LENGTH(TRIM(PID.PATIENT_DEATH_DATE_AND_TIME)) <8 THEN NULL
				ELSE	CAST(RPAD(PID.PATIENT_DEATH_DATE_AND_TIME ,14,'0') AS TIMESTAMP(0) FORMAT 'YYYYMMDDHHMISS') END AS PTNT_DTH_TS,
	PID.PATIENT_DEATH_INDICATOR AS PTNT_DTH_IND,
	PV1.ACCOUNT_STATUS_ID AS PTNT_STS_REF_CD,
	CASE WHEN PV1.MESSAGE_CONTROL_ID IS NOT NULL 
				THEN 
						CASE WHEN (TRIM(PV1.PATIENT_CLASS_ID) IS NOT NULL AND TRIM(PV1.PATIENT_TYPE_ID ) IS NOT NULL) THEN PV1.PATIENT_CLASS_ID || '_' || PV1.PATIENT_TYPE_ID
	          						ELSE PV1.PATIENT_CLASS_ID	END
	          	ELSE 'SEG_NA' END AS PTNT_CLASS_REF_CD,
	CAST(SUBSTR(MSH.MESSAGE_DATE_TIME,1,10) AS DATE FORMAT 'YYYY-MM-DD')  AS PTNT_STS_EFFV_DT,
	CASE WHEN (MSH.SOURCE_INTERFACE='MEDITECH 5.6' OR MSH.SOURCE_INTERFACE='MEDITECH 6.0' OR MSH.SOURCE_INTERFACE='EXPANSE') THEN MSH.MEDICAL_RECORD_URN
	WHEN MSH.SOURCE_INTERFACE = 'Cerner' and MSH.Sending_Facility <> 'COCCMH' Then PID.alternate_patient_id_id_num
	ELSE MSH.MEDICAL_RECORD_NUM END AS EMR_PTNT_ID,
	Case When FL.FACILITY_MNEMONIC_CS = 'COCUH' Then 'FLBU' Else FL.NETWORK_MNEMONIC_CS End AS EMR_PTNT_ID_ASSGN_AUTH,
	CASE WHEN PV1.MESSAGE_CONTROL_ID IS NOT NULL THEN CODE_SPCL_PGM.CD_SK ELSE NULL END AS SPCL_PGM_CD_SK,
	PV1.ADMISSION_TYPE_ID AS PRTY_REF_CD,
	NULL AS SIG_DT,
	NULL AS ADV_DRTCV_PRSNT_TXT,
	NULL AS EFFV_FR_DT,
	NULL AS EFFV_TO_DT,
	'ENCNT_DTL' AS TYPE_REF_CD,
	TRIM(PV2.accommodation_code_id) AS ACCOM_REF_CD,
	MSH.SOURCE_INTERFACE AS SRC_SYS_REF_CD,
	CLAC.ENCNT_SSUKT AS SRC_SYS_UNQ_KEY_TXT,
	100 AS CRT_RUN_ID,
	100 AS LST_UPDT_RUN_ID,
	MSH.MESSAGE_CONTROL_ID AS MSG_CTRL_ID_TXT,
	MSH.MESSAGE_CONTROL_ID,
	MSH.MESSAGE_DATE_TIME,
	MSH.PATIENT_ACCOUNT_NUM,
	MSH.MEDICAL_RECORD_NUM,
	MSH.MEDICAL_RECORD_URN,
	MSH.SENDING_FACILITY,
	MSH.SOURCE_INTERFACE,
	MSH.MESSAGE_TYPE_TRIGGER_EVENT,
	MSH.DW_INSRT_TS AS DW_INSRT_TS
FROM
	EDWCDM_STAGING.ENCNT_DTL_WRK MSH
	LEFT OUTER JOIN EDWHL7_STAGING_VIEWS.HL7_CLINICAL_KEYS CLAC
	ON 
		TRIM(MSH.PATIENT_ACCOUNT_NUM)=TRIM(CLAC.PATIENT_ACCOUNT_NUM_RAW) AND
		TRIM(MSH.SENDING_FACILITY)=TRIM(CLAC.SENDING_FACILITY)
	LEFT OUTER JOIN
		(SELECT DISTINCT MESSAGE_CONTROL_ID,PATIENT_TYPE_ID,ADMIT_SOURCE_ID,MODE_OF_ARRIVAL,ADMISSION_TYPE_ID,ADMIT_DATE_TIME,DISCHARGE_DATE_TIME,DISCHARGE_DISPOSITION_ID,ACCOUNT_STATUS_ID,FINANCIAL_CLASS_FINANCIAL_CLASS_CODE_ID,SENDING_FACILITY,PATIENT_CLASS_ID,
		ARRV_MODE_CD_SSUKT,PT_OF_ORIG_CD_SSUKT,DSCRG_STS_CD_SSUKT,VST_TYPE_CD_SSUKT,SPCL_PGM_CD_SSUKT,HSPTL_SRVC_CD_SSUKT,CONF_CD_SSUKT
		,visit_num_id_num
		FROM EDWHL7_STAGING_VIEWS.HL7_PV1 WHERE MESSAGE_TYPE='ADT') PV1
	ON
		MSH.MESSAGE_CONTROL_ID=PV1.MESSAGE_CONTROL_ID
	LEFT OUTER JOIN EDWHL7_STAGING_VIEWS.HL7_CMN_CODE CODE_VST_TYPE
	ON
		--'MT5.6_HL7_V2.8.2_'||'PV1.PATIENT_CLASS.ID_'||TRIM(PV1.SENDING_FACILITY)||'_'||TRIM(PV1.PATIENT_CLASS_ID)||'_'||TRIM(PV1.PATIENT_TYPE_ID) =TRIM(CODE_VST_TYPE.CD_SSUKT)
		TRIM(PV1.VST_TYPE_CD_SSUKT) =TRIM(CODE_VST_TYPE.CD_SSUKT)
		AND CODE_VST_TYPE.SRS_SYS_REF_CD='VST_TYPE_CD'
		

	LEFT OUTER JOIN EDWHL7_STAGING_VIEWS.HL7_CMN_CODE CODE_PT_OF_ORIG
	ON
		TRIM(PV1.PT_OF_ORIG_CD_SSUKT)=TRIM(CODE_PT_OF_ORIG.CD_SSUKT)
		AND CODE_PT_OF_ORIG.SRS_SYS_REF_CD='PT_OF_ORIG_CD'
	
	LEFT OUTER JOIN EDWHL7_STAGING_VIEWS.HL7_CMN_CODE CODE_DSCRG_STS
	ON
		TRIM(PV1.DSCRG_STS_CD_SSUKT)=TRIM(CODE_DSCRG_STS.CD_SSUKT)
		AND CODE_DSCRG_STS.SRS_SYS_REF_CD='DSCRG_STS_CD'

	LEFT OUTER JOIN EDWHL7_STAGING_VIEWS.HL7_CMN_CODE CODE_SPCL_PGM
	ON
		TRIM(PV1.SPCL_PGM_CD_SSUKT) =TRIM(CODE_SPCL_PGM.CD_SSUKT)
		AND CODE_SPCL_PGM.SRS_SYS_REF_CD='SPCL_PGM_CD'
		
	--ADDED ON 4-18-2018 --START
	LEFT OUTER JOIN EDWHL7_STAGING_VIEWS.HL7_CMN_CODE CODE_HSPTL
	ON	
		TRIM(PV1.HSPTL_SRVC_CD_SSUKT) =TRIM(CODE_HSPTL.CD_SSUKT)
		AND CODE_HSPTL.SRS_SYS_REF_CD='HSPTL_SRVC_CD'

	LEFT OUTER JOIN EDWHL7_STAGING_VIEWS.HL7_CMN_CODE CODE_CNF
	ON	
		TRIM(PV1.CONF_CD_SSUKT) =TRIM(CODE_CNF.CD_SSUKT)
		AND CODE_CNF.SRS_SYS_REF_CD='CONF_CD'
         
        --ADDED ON 4-18-2018 --END

	LEFT OUTER JOIN (SELECT DISTINCT MESSAGE_CONTROL_ID,SET_ID FROM EDWHL7_STAGING_VIEWS.HL7_IN1 QUALIFY ROW_NUMBER() OVER (PARTITION BY MESSAGE_CONTROL_ID ORDER BY SET_ID DESC)=1  WHERE MESSAGE_TYPE='ADT') IN1
	ON
		MSH.MESSAGE_CONTROL_ID=IN1.MESSAGE_CONTROL_ID

	
	LEFT OUTER JOIN (SELECT MAX(ADMIT_REASON_ID) ADMIT_REASON_ID, 
     MESSAGE_CONTROL_ID, 
     MAX(ACTUAL_LENGTH_OF_INPATIENT_STAY) ACTUAL_LENGTH_OF_INPATIENT_STAY, 
     MAX(ARRV_MODE_CD_SSUKT) ARRV_MODE_CD_SSUKT, 
     MAX(ADMIT_REASON_TEXT) ADMIT_REASON_TEXT, 
     MAX(SOURCE_INTERFACE) SOURCE_INTERFACE,
	 MAX(accommodation_code_id) AS accommodation_code_id
    FROM EDWHL7_STAGING_VIEWS.HL7_PV2 WHERE MESSAGE_TYPE='ADT' Group By MESSAGE_CONTROL_ID) PV2
    ON
     MSH.MESSAGE_CONTROL_ID=PV2.MESSAGE_CONTROL_ID
	
--NDS-689 START
    LEFT OUTER JOIN (Select Message_Control_Id, max(obsv_value_text) obsv_value_text From Edwhl7_Staging_Views.hl7_obx
    Where message_type = 'ADT' and source_interface = 'Cerner' and obsv_id_id = 'ENCNTR_ID'
    Group By 1
    ) OBX
    ON MSH.Message_Control_ID = OBX.Message_Control_ID
--NDS-689 END

	LEFT OUTER JOIN EDWHL7_STAGING_VIEWS.HL7_CMN_CODE CODE_ARRV_MODE
	ON
		TRIM(PV2.ARRV_MODE_CD_SSUKT) =TRIM(CODE_ARRV_MODE.CD_SSUKT)
		AND CODE_ARRV_MODE.SRS_SYS_REF_CD='ARRV_MODE_CD'	
	
	LEFT OUTER JOIN (SELECT DISTINCT MESSAGE_CONTROL_ID,PATIENT_DEATH_DATE_AND_TIME,PATIENT_DEATH_INDICATOR,ALTERNATE_PATIENT_ID_ID_NUM,PATIENT_ID_LIST_ID_TYPE_CODE,PATIENT_ID_LIST_ID_NUM, SOURCE_INTERFACE, alternate_patient_id_id_type_code FROM EDWHL7_STAGING_VIEWS.HL7_PID WHERE MESSAGE_TYPE='ADT') PID
	ON
		MSH.MESSAGE_CONTROL_ID=PID.MESSAGE_CONTROL_ID
	
	LEFT OUTER JOIN EDWCDM_VIEWS.HL7_FACILITY_LOAD_LIST FL
	ON	
		TRIM(MSH.SENDING_FACILITY)=TRIM(FL.FACILITY_MNEMONIC_CS) 
		
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

/* ADDED BELOW DELETE STEP ON 10/18/18 AS TEMPORARY FIX FOR DUPLICATE ISSUE WHILE MERGING THE DATA INTO REJ TABLE. AS THERE ARE DUPLICATES IN PV2. THIS DELETE SHOULD BE REMOVED ONCE PV2 IS FIXED*/

DEL FROM EDWCDM_STAGING.ENCNT_DTL_REJ  
WHERE MSG_CTRL_ID_TXT   IN 
(
SEL DISTINCT MSG_CTRL_ID_TXT    FROM 

(
SEL DISTINCT 
            ENCNT_SK,
            VLD_FR_TS,
            PATIENT_DW_ID,
            PAT_ACCT_NUM,
            COMPANY_CODE,
            COID,
            VLD_TO_TS,
            ENCNT_TS,
            ENCNT_ID_TXT,
            ALT_ENCNT_TXT,
            VST_TYPE_CD_SK,
            EHR_MED_REC_NUM,
            EHR_PAT_ACCT_NUM,
            EHR_MED_URN,
            PT_OF_ORIG_CD_SK,
            ARRV_MODE_CD_SK,
            ADMT_TYPE_REF_CD,
            ADMT_TS,
            ADMT_CMPLN_TXT,
            RE_ADMT_IND,
            CNFD_CD_SK,
            HSPTL_SRVC_CD_SK,
            EXPCT_NUM_OF_INS_PLAN_CNT,
            ACTL_LEN_OF_STAY_DYS_CNT,
            EMPMNT_ILLNS_IND,
            ACDNT_AUTO_ST_CD,
            ACDNT_TYPE_REF_CD,
            ACDNT_TS,
            DSCRG_TS,
            DSCRG_STS_CD_SK,
            PTNT_DTH_TS,
            PTNT_DTH_IND,
            PTNT_STS_REF_CD,
            PTNT_CLASS_REF_CD,
            PTNT_STS_EFFV_DT,
            EMR_PTNT_ID,
            EMR_PTNT_ID_ASSGN_AUTH,
            SPCL_PGM_CD_SK,
            PRTY_REF_CD,
            SIG_DT,
            ADV_DRTCV_PRSNT_TXT,
            EFFV_FR_DT,
            EFFV_TO_DT,
            TYPE_REF_CD,
			ACCOM_REF_CD,
            SRC_SYS_REF_CD,
            SRC_SYS_UNQ_KEY_TXT,
            CRT_RUN_ID,
            LST_UPDT_RUN_ID,
            MSG_CTRL_ID_TXT,
            MESSAGE_CONTROL_ID,
            MESSAGE_DATE_TIME,
            PATIENT_ACCOUNT_NUM,
            MEDICAL_RECORD_NUM,
            MEDICAL_RECORD_URN,
            SENDING_FACILITY,
            SOURCE_INTERFACE,
            MESSAGE_TYPE_TRIGGER_EVENT,
            CASE WHEN PATIENT_ACCOUNT_NUM IS NULL THEN 'PATIENT_ACCOUNT_NUM ' ELSE '' END || 
            CASE WHEN SENDING_FACILITY IS NULL THEN 'SENDING_FACILITY ' ELSE '' END || 
            CASE WHEN PTNT_CLASS_REF_CD IS NULL THEN 'PTNT_CLASS_REF_CD' ELSE '' END  AS REPROCESS_IND,
            DW_INSRT_TS,
			COUNT(*) OVER (PARTITION BY MSG_CTRL_ID_TXT ORDER BY MSG_CTRL_ID_TXT)  AS CNTR
FROM EDWCDM_STAGING.ENCNT_DTL_WRK1  WHERE (PTNT_CLASS_REF_CD IS NULL OR PATIENT_ACCOUNT_NUM IS NULL OR SENDING_FACILITY IS NULL)
) T2

WHERE CNTR > 1
);

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK1');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

/* LOAD THE REJECT RECORDS NOT TO BE REPROCESSED.*/

MERGE INTO 
EDWCDM_STAGING.ENCNT_DTL_REJ  T1
USING
(
SEL DISTINCT 
            ENCNT_SK,
            VLD_FR_TS,
            PATIENT_DW_ID,
            PAT_ACCT_NUM,
            COMPANY_CODE,
            COID,
            VLD_TO_TS,
            ENCNT_TS,
            ENCNT_ID_TXT,
            ALT_ENCNT_TXT,
            VST_TYPE_CD_SK,
            EHR_MED_REC_NUM,
            EHR_PAT_ACCT_NUM,
            EHR_MED_URN,
            PT_OF_ORIG_CD_SK,
            ARRV_MODE_CD_SK,
            ADMT_TYPE_REF_CD,
            ADMT_TS,
            ADMT_CMPLN_TXT,
            RE_ADMT_IND,
            CNFD_CD_SK,
            HSPTL_SRVC_CD_SK,
            EXPCT_NUM_OF_INS_PLAN_CNT,
            ACTL_LEN_OF_STAY_DYS_CNT,
            EMPMNT_ILLNS_IND,
            ACDNT_AUTO_ST_CD,
            ACDNT_TYPE_REF_CD,
            ACDNT_TS,
            DSCRG_TS,
            DSCRG_STS_CD_SK,
            PTNT_DTH_TS,
            PTNT_DTH_IND,
            PTNT_STS_REF_CD,
            PTNT_CLASS_REF_CD,
            PTNT_STS_EFFV_DT,
            EMR_PTNT_ID,
            EMR_PTNT_ID_ASSGN_AUTH,
            SPCL_PGM_CD_SK,
            PRTY_REF_CD,
            SIG_DT,
            ADV_DRTCV_PRSNT_TXT,
            EFFV_FR_DT,
            EFFV_TO_DT,
            TYPE_REF_CD,
			ACCOM_REF_CD,
            SRC_SYS_REF_CD,
            SRC_SYS_UNQ_KEY_TXT,
            CRT_RUN_ID,
            LST_UPDT_RUN_ID,
            MSG_CTRL_ID_TXT,
            MESSAGE_CONTROL_ID,
            MESSAGE_DATE_TIME,
            PATIENT_ACCOUNT_NUM,
            MEDICAL_RECORD_NUM,
            MEDICAL_RECORD_URN,
            SENDING_FACILITY,
            SOURCE_INTERFACE,
            MESSAGE_TYPE_TRIGGER_EVENT,
            CASE WHEN PATIENT_ACCOUNT_NUM IS NULL THEN 'PATIENT_ACCOUNT_NUM ' ELSE '' END || 
            CASE WHEN SENDING_FACILITY IS NULL THEN 'SENDING_FACILITY ' ELSE '' END || 
            CASE WHEN PTNT_CLASS_REF_CD IS NULL THEN 'PTNT_CLASS_REF_CD' ELSE '' END  AS REPROCESS_IND,
            DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK1  WHERE (PTNT_CLASS_REF_CD IS NULL OR PATIENT_ACCOUNT_NUM IS NULL OR SENDING_FACILITY IS NULL)
) T2

ON
T1.MSG_CTRL_ID_TXT = T2.MSG_CTRL_ID_TXT  
AND T1.REPROCESS_IND NOT=  'NO CHANGE IN CDC FIELDS' 
AND T1.REPROCESS_IND NOT LIKE  'REPROCESSED%'

WHEN MATCHED THEN 

UPDATE SET

ENCNT_SK=T2.ENCNT_SK,
VLD_FR_TS=T2.VLD_FR_TS,
PATIENT_DW_ID=T2.PATIENT_DW_ID,
PAT_ACCT_NUM=T2.PAT_ACCT_NUM,
COMPANY_CODE=T2.COMPANY_CODE,
COID=T2.COID,
VLD_TO_TS=T2.VLD_TO_TS,
ENCNT_TS=T2.ENCNT_TS,
ENCNT_ID_TXT=T2.ENCNT_ID_TXT,
ALT_ENCNT_TXT=T2.ALT_ENCNT_TXT,
VST_TYPE_CD_SK=T2.VST_TYPE_CD_SK,
EHR_MED_REC_NUM=T2.EHR_MED_REC_NUM,
EHR_PAT_ACCT_NUM=T2.EHR_PAT_ACCT_NUM,
EHR_MED_URN=T2.EHR_MED_URN,
PT_OF_ORIG_CD_SK=T2.PT_OF_ORIG_CD_SK,
ARRV_MODE_CD_SK=T2.ARRV_MODE_CD_SK,
ADMT_TYPE_REF_CD=T2.ADMT_TYPE_REF_CD,
ADMT_TS=T2.ADMT_TS,
ADMT_CMPLN_TXT=T2.ADMT_CMPLN_TXT,
RE_ADMT_IND=T2.RE_ADMT_IND,
CNFD_CD_SK=T2.CNFD_CD_SK,
HSPTL_SRVC_CD_SK=T2.HSPTL_SRVC_CD_SK,
EXPCT_NUM_OF_INS_PLAN_CNT=T2.EXPCT_NUM_OF_INS_PLAN_CNT,
ACTL_LEN_OF_STAY_DYS_CNT=T2.ACTL_LEN_OF_STAY_DYS_CNT,
EMPMNT_ILLNS_IND=T2.EMPMNT_ILLNS_IND,
ACDNT_AUTO_ST_CD=T2.ACDNT_AUTO_ST_CD,
ACDNT_TYPE_REF_CD=T2.ACDNT_TYPE_REF_CD,
ACDNT_TS=T2.ACDNT_TS,
DSCRG_TS=T2.DSCRG_TS,
DSCRG_STS_CD_SK=T2.DSCRG_STS_CD_SK,
PTNT_DTH_TS=T2.PTNT_DTH_TS,
PTNT_DTH_IND=T2.PTNT_DTH_IND,
PTNT_STS_REF_CD=T2.PTNT_STS_REF_CD,
PTNT_CLASS_REF_CD=T2.PTNT_CLASS_REF_CD,
PTNT_STS_EFFV_DT=T2.PTNT_STS_EFFV_DT,
EMR_PTNT_ID=T2.EMR_PTNT_ID,
EMR_PTNT_ID_ASSGN_AUTH=T2.EMR_PTNT_ID_ASSGN_AUTH,
SPCL_PGM_CD_SK=T2.SPCL_PGM_CD_SK,
PRTY_REF_CD=T2.PRTY_REF_CD,
SIG_DT=T2.SIG_DT,
ADV_DRTCV_PRSNT_TXT=T2.ADV_DRTCV_PRSNT_TXT,
EFFV_FR_DT=T2.EFFV_FR_DT,
EFFV_TO_DT=T2.EFFV_TO_DT,
TYPE_REF_CD=T2.TYPE_REF_CD,
ACCOM_REF_CD=T2.ACCOM_REF_CD,
SRC_SYS_REF_CD=T2.SRC_SYS_REF_CD,
SRC_SYS_UNQ_KEY_TXT=T2.SRC_SYS_UNQ_KEY_TXT,
CRT_RUN_ID=T2.CRT_RUN_ID,
LST_UPDT_RUN_ID=T2.LST_UPDT_RUN_ID,
--MSG_CTRL_ID_TXT=T2.MSG_CTRL_ID_TXT,
SRC_MESSAGE_CONTROL_ID=T2.MSG_CTRL_ID_TXT,
SRC_MESSAGE_DATE_TIME=T2.MESSAGE_DATE_TIME,
SRC_PATIENT_ACCOUNT_NUM=T2.PATIENT_ACCOUNT_NUM,
SRC_MEDICAL_RECORD_NUM=T2.MEDICAL_RECORD_NUM,
SRC_MEDICAL_RECORD_URN=T2.MEDICAL_RECORD_URN,
SRC_SENDING_FACILITY=T2.SENDING_FACILITY,
SRC_SOURCE_INTERFACE=T2.SOURCE_INTERFACE,
SRC_MESSAGE_TYPE_TRIGGER_EVENT=T2.MESSAGE_TYPE_TRIGGER_EVENT,
REPROCESS_IND= T1.REPROCESS_IND || ' - ' || CAST(T1.DW_INSRT_TS AS VARCHAR(50)) || ' - ' || T2.REPROCESS_IND,
DW_INSRT_TS=T2.DW_INSRT_TS

WHEN NOT MATCHED THEN 

INSERT 
(
            ENCNT_SK,
            VLD_FR_TS,
            PATIENT_DW_ID,
            PAT_ACCT_NUM,
            COMPANY_CODE,
            COID,
            VLD_TO_TS,
            ENCNT_TS,
            ENCNT_ID_TXT,
            ALT_ENCNT_TXT,
            VST_TYPE_CD_SK,
            EHR_MED_REC_NUM,
            EHR_PAT_ACCT_NUM,
            EHR_MED_URN,
            PT_OF_ORIG_CD_SK,
            ARRV_MODE_CD_SK,
            ADMT_TYPE_REF_CD,
            ADMT_TS,
            ADMT_CMPLN_TXT,
            RE_ADMT_IND,
            CNFD_CD_SK,
            HSPTL_SRVC_CD_SK,
            EXPCT_NUM_OF_INS_PLAN_CNT,
            ACTL_LEN_OF_STAY_DYS_CNT,
            EMPMNT_ILLNS_IND,
            ACDNT_AUTO_ST_CD,
            ACDNT_TYPE_REF_CD,
            ACDNT_TS,
            DSCRG_TS,
            DSCRG_STS_CD_SK,
            PTNT_DTH_TS,
            PTNT_DTH_IND,
            PTNT_STS_REF_CD,
            PTNT_CLASS_REF_CD,
            PTNT_STS_EFFV_DT,
            EMR_PTNT_ID,
            EMR_PTNT_ID_ASSGN_AUTH,
            SPCL_PGM_CD_SK,
            PRTY_REF_CD,
            SIG_DT,
            ADV_DRTCV_PRSNT_TXT,
            EFFV_FR_DT,
            EFFV_TO_DT,
            TYPE_REF_CD,
			ACCOM_REF_CD,
            SRC_SYS_REF_CD,
            SRC_SYS_UNQ_KEY_TXT,
            CRT_RUN_ID,
            LST_UPDT_RUN_ID,
            MSG_CTRL_ID_TXT,
            SRC_MESSAGE_CONTROL_ID,
            SRC_MESSAGE_DATE_TIME,
            SRC_PATIENT_ACCOUNT_NUM,
            SRC_MEDICAL_RECORD_NUM,
            SRC_MEDICAL_RECORD_URN,
            SRC_SENDING_FACILITY,
            SRC_SOURCE_INTERFACE,
            SRC_MESSAGE_TYPE_TRIGGER_EVENT,
            REPROCESS_IND,
            DW_INSRT_TS
)
VALUES
(
T2.ENCNT_SK,
T2.VLD_FR_TS,
T2.PATIENT_DW_ID,
T2.PAT_ACCT_NUM,
T2.COMPANY_CODE,
T2.COID,
T2.VLD_TO_TS,
T2.ENCNT_TS,
T2.ENCNT_ID_TXT,
T2.ALT_ENCNT_TXT,
T2.VST_TYPE_CD_SK,
T2.EHR_MED_REC_NUM,
T2.EHR_PAT_ACCT_NUM,
T2.EHR_MED_URN,
T2.PT_OF_ORIG_CD_SK,
T2.ARRV_MODE_CD_SK,
T2.ADMT_TYPE_REF_CD,
T2.ADMT_TS,
T2.ADMT_CMPLN_TXT,
T2.RE_ADMT_IND,
T2.CNFD_CD_SK,
T2.HSPTL_SRVC_CD_SK,
T2.EXPCT_NUM_OF_INS_PLAN_CNT,
T2.ACTL_LEN_OF_STAY_DYS_CNT,
T2.EMPMNT_ILLNS_IND,
T2.ACDNT_AUTO_ST_CD,
T2.ACDNT_TYPE_REF_CD,
T2.ACDNT_TS,
T2.DSCRG_TS,
T2.DSCRG_STS_CD_SK,
T2.PTNT_DTH_TS,
T2.PTNT_DTH_IND,
T2.PTNT_STS_REF_CD,
T2.PTNT_CLASS_REF_CD,
T2.PTNT_STS_EFFV_DT,
T2.EMR_PTNT_ID,
T2.EMR_PTNT_ID_ASSGN_AUTH,
T2.SPCL_PGM_CD_SK,
T2.PRTY_REF_CD,
T2.SIG_DT,
T2.ADV_DRTCV_PRSNT_TXT,
T2.EFFV_FR_DT,
T2.EFFV_TO_DT,
T2.TYPE_REF_CD,
T2.ACCOM_REF_CD,
T2.SRC_SYS_REF_CD,
T2.SRC_SYS_UNQ_KEY_TXT,
T2.CRT_RUN_ID,
T2.LST_UPDT_RUN_ID,
T2.MSG_CTRL_ID_TXT,
T2.MSG_CTRL_ID_TXT,
T2.MESSAGE_DATE_TIME,
T2.PATIENT_ACCOUNT_NUM,
T2.MEDICAL_RECORD_NUM,
T2.MEDICAL_RECORD_URN,
T2.SENDING_FACILITY,
T2.SOURCE_INTERFACE,
T2.MESSAGE_TYPE_TRIGGER_EVENT,
T2.REPROCESS_IND,
T2.DW_INSRT_TS
)
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK1 WHERE (TRIM(PATIENT_ACCOUNT_NUM) IS NULL OR TRIM(SENDING_FACILITY) IS NULL);

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_REJ');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK2;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK2
(
	REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	MESSAGE_TYPE_TRIGGER_EVENT_DIS,
	MESSAGE_TYPE_TRIGGER_EVENT_INS,
	DW_INSRT_TS
)

SELECT 
	0 REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	--CASE WHEN SRC_SYS_REF_CD = 'EPIC' AND TRIM(MESSAGE_TYPE_TRIGGER_EVENT) = 'A11' THEN NULL ELSE ENCNT_TS END ENCNT_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	--CASE WHEN SRC_SYS_REF_CD = 'EPIC' AND TRIM(MESSAGE_TYPE_TRIGGER_EVENT) = 'A11' THEN NULL ELSE ADMT_TS END ADMT_TS,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	--CASE WHEN SRC_SYS_REF_CD = 'EPIC' AND TRIM(MESSAGE_TYPE_TRIGGER_EVENT) IN ('A13','A01') THEN NULL ELSE DSCRG_TS END AS DSCRG_TS,
	DSCRG_TS,
	--CASE WHEN SRC_SYS_REF_CD = 'EPIC' AND TRIM(MESSAGE_TYPE_TRIGGER_EVENT) IN ('A13','A01') THEN 0 ELSE DSCRG_STS_CD_SK END AS DSCRG_STS_CD_SK,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	MESSAGE_TYPE_TRIGGER_EVENT AS MESSAGE_TYPE_TRIGGER_EVENT_DIS,
	CASE WHEN TRIM(MESSAGE_TYPE_TRIGGER_EVENT) = 'A03' THEN MESSAGE_TYPE_TRIGGER_EVENT ELSE 'A01' END AS MESSAGE_TYPE_TRIGGER_EVENT_INS,
	--DW_INSRT_TS
	CURRENT_TIMESTAMP(0)
FROM EDWCDM_STAGING.ENCNT_DTL_WRK1
WHERE ENCNT_SK IS NOT NULL 
 	AND PTNT_CLASS_REF_CD NOT='SEG_NA' 
	AND EHR_PAT_ACCT_NUM IS NOT NULL
	AND VST_TYPE_CD_SK IS NOT NULL
	AND PT_OF_ORIG_CD_SK IS NOT NULL
	AND ARRV_MODE_CD_SK IS NOT NULL
	AND DSCRG_STS_CD_SK IS NOT NULL
	AND SPCL_PGM_CD_SK IS NOT NULL
	AND HSPTL_SRVC_CD_SK IS NOT NULL
	AND CNFD_CD_SK IS NOT NULL
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;


INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK2
(
	REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	--MESSAGE_TYPE_TRIGGER_EVENT_DIS,	MESSAGE_TYPE_TRIGGER_EVENT_INS,   ---ETE  --331 CHANGE
	DW_INSRT_TS
)
SELECT 
DISTINCT 
	0 REC_RANK,
	CORE.ENCNT_SK,
	--CORE.VLD_FR_TS, Commented to handle Epic duplication issue due to multiple A03 at same dttm
        CAST((SUBSTR(CAST(CORE.VLD_FR_TS AS VARCHAR(50)), 1, 19) )  AS TIMESTAMP(6) FORMAT 'YYYY-MM-DD-HH.MI.SS.S(6)'),
	CORE.PATIENT_DW_ID,
	CORE.PAT_ACCT_NUM,
	CORE.COMPANY_CODE,
	CORE.COID,
	CORE.VLD_TO_TS,
	CORE.ENCNT_TS,
	CORE.ENCNT_ID_TXT,
	CORE.ALT_ENCNT_TXT,
	CORE.VST_TYPE_CD_SK,
	CORE.EHR_MED_REC_NUM,
	CORE.EHR_PAT_ACCT_NUM,
	CORE.EHR_MED_URN,
	CORE.PT_OF_ORIG_CD_SK,
	CORE.ARRV_MODE_CD_SK,
	CORE.ADMT_TYPE_REF_CD,
	CORE.ADMT_TS,
	CORE.ADMT_CMPLN_TXT,
	CORE.RE_ADMT_IND,
	CORE.CNFD_CD_SK,
	CORE.HSPTL_SRVC_CD_SK,
	CORE.EXPCT_NUM_OF_INS_PLAN_CNT,
	CORE.ACTL_LEN_OF_STAY_DYS_CNT,
	CORE.EMPMNT_ILLNS_IND,
	CORE.ACDNT_AUTO_ST_CD,
	CORE.ACDNT_TYPE_REF_CD,
	CORE.ACDNT_TS,
	CORE.DSCRG_TS,
	CORE.DSCRG_STS_CD_SK,
	CORE.PTNT_DTH_TS,
	CORE.PTNT_DTH_IND,
	CORE.PTNT_STS_REF_CD,
	CORE.PTNT_CLASS_REF_CD,
	CORE.PTNT_STS_EFFV_DT,
	CORE.EMR_PTNT_ID,
	CORE.EMR_PTNT_ID_ASSGN_AUTH,
	CORE.SPCL_PGM_CD_SK,
	CORE.PRTY_REF_CD,
	CORE.SIG_DT,
	CORE.ADV_DRTCV_PRSNT_TXT,
	CORE.EFFV_FR_DT,
	CORE.EFFV_TO_DT,
	CORE.TYPE_REF_CD,
	CORE.ACCOM_REF_CD,
	CORE.SRC_SYS_REF_CD,
	CORE.SRC_SYS_UNQ_KEY_TXT,
	CORE.CRT_RUN_ID,
	CORE.LST_UPDT_RUN_ID,
	CORE.MSG_CTRL_ID_TXT,
	CORE.HL7_EV_ID AS MESSAGE_TYPE_TRIGGER_EVENT,
	--CASE WHEN CORE.DSCRG_TS IS NULL THEN 'A13' ELSE 'A03' END AS MESSAGE_TYPE_TRIGGER_EVENT_DIS, 	'A01' AS MESSAGE_TYPE_TRIGGER_EVENT_INS,
	CORE.DW_INSRT_TS
FROM EDWCDM_BASE_VIEWS.ENCNT_DTL CORE
INNER JOIN EDWCDM_STAGING.ENCNT_DTL_WRK1 WRK 
ON CORE.ENCNT_SK = WRK.ENCNT_SK ---AND CORE.MSG_CTRL_ID_TXT IS NOT NULL
WHERE WRK.ENCNT_SK IS NOT NULL 
	AND WRK.PTNT_CLASS_REF_CD NOT='SEG_NA' 
	AND WRK.EHR_PAT_ACCT_NUM IS NOT NULL
	AND WRK.VST_TYPE_CD_SK IS NOT NULL
	AND WRK.PT_OF_ORIG_CD_SK IS NOT NULL
	AND WRK.ARRV_MODE_CD_SK IS NOT NULL
	AND WRK.DSCRG_STS_CD_SK IS NOT NULL
	AND WRK.SPCL_PGM_CD_SK IS NOT NULL
	AND WRK.HSPTL_SRVC_CD_SK IS NOT NULL
	AND WRK.CNFD_CD_SK IS NOT NULL
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK2');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK3;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK3
(
	REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	--MESSAGE_TYPE_TRIGGER_EVENT_DIS,	MESSAGE_TYPE_TRIGGER_EVENT_INS,
	DW_INSRT_TS
)

SELECT 
	ROW_NUMBER() OVER(PARTITION BY ENCNT_SK ORDER BY VLD_FR_TS,MSG_CTRL_ID_TXT,DW_INSRT_TS) AS REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD, 
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	--MESSAGE_TYPE_TRIGGER_EVENT_DIS,	MESSAGE_TYPE_TRIGGER_EVENT_INS,
	DW_INSRT_TS
	FROM EDWCDM_STAGING.ENCNT_DTL_WRK2
	;
.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK3');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK_INS;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK_INS
(
	REC_RANK,
	NEXT_RANK,	
	ENCNT_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
)
SELECT
	S.REC_RANK,
	COALESCE(T.REC_RANK, 99999) AS NEXT_RANK, 	
	S.ENCNT_SK,
	S.EXPCT_NUM_OF_INS_PLAN_CNT,
	S.MSG_CTRL_ID_TXT,
	S.MESSAGE_TYPE_TRIGGER_EVENT,
	S.DW_INSRT_TS
	FROM 
(SELECT 
	ROW_NUMBER() OVER(PARTITION BY ENCNT_SK ORDER BY VLD_FR_TS,MSG_CTRL_ID_TXT,REC_RANK,DW_INSRT_TS) AS R_RANK,
	REC_RANK,
	ENCNT_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK3 WHERE SRC_SYS_REF_CD IN ('MEDITECH 6.0', 'EXPANSE') AND TRIM(MESSAGE_TYPE_TRIGGER_EVENT) IN ('A01') 
) S 
LEFT JOIN 
(
SELECT 
	ROW_NUMBER() OVER(PARTITION BY ENCNT_SK ORDER BY VLD_FR_TS,MSG_CTRL_ID_TXT,REC_RANK,DW_INSRT_TS) AS R_RANK,
	REC_RANK,
	ENCNT_SK,
	MSG_CTRL_ID_TXT,
	DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK3 WHERE SRC_SYS_REF_CD IN ('MEDITECH 6.0', 'EXPANSE') AND TRIM(MESSAGE_TYPE_TRIGGER_EVENT) IN ('A01') 
) T ON S.ENCNT_SK = T.ENCNT_SK AND S.R_RANK = T.R_RANK - 1
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

-- Only for MMSAV as part of NDS-589 Changes

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK_ADT;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK_ADT
(
	REC_RANK,
	NEXT_RANK,	
	ENCNT_SK,
	ENCNT_TS,
	ADMT_TS,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
)
SELECT
	S.REC_RANK,
	COALESCE(T.REC_RANK, 99999) AS NEXT_RANK, 	
	S.ENCNT_SK,
	S.ENCNT_TS,
	S.ADMT_TS,
	S.MSG_CTRL_ID_TXT,
	S.MESSAGE_TYPE_TRIGGER_EVENT,
	S.DW_INSRT_TS
	FROM 
(SELECT 
	ROW_NUMBER() OVER(PARTITION BY ENCNT_SK ORDER BY VLD_FR_TS,MSG_CTRL_ID_TXT,REC_RANK,DW_INSRT_TS) AS R_RANK,
	REC_RANK,
	ENCNT_SK,
	ENCNT_TS,
	ADMT_TS,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK3 WHERE SRC_SYS_REF_CD = 'EPIC' AND COID = '26960' AND TRIM(MESSAGE_TYPE_TRIGGER_EVENT) IN ('A01','A03', 'A04', 'A06', 'A07','A11') 
) S 
LEFT JOIN 
(
SELECT 
	ROW_NUMBER() OVER(PARTITION BY ENCNT_SK ORDER BY VLD_FR_TS,MSG_CTRL_ID_TXT,REC_RANK,DW_INSRT_TS) AS R_RANK,
	REC_RANK,
	ENCNT_SK,
	MSG_CTRL_ID_TXT,
	DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK3 WHERE SRC_SYS_REF_CD = 'EPIC' AND COID = '26960' AND TRIM(MESSAGE_TYPE_TRIGGER_EVENT) IN ('A01','A03', 'A04', 'A06', 'A07','A11') 
) T ON S.ENCNT_SK = T.ENCNT_SK AND S.R_RANK = T.R_RANK - 1
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK_DIS;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK_DIS
(
	REC_RANK,
	NEXT_RANK,	
	ENCNT_SK,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
)
SELECT
	S.REC_RANK,
	COALESCE(T.REC_RANK, 99999) AS NEXT_RANK, 	
	S.ENCNT_SK,
	S.DSCRG_TS,
	S.DSCRG_STS_CD_SK,
	S.MSG_CTRL_ID_TXT,
	S.MESSAGE_TYPE_TRIGGER_EVENT,
	S.DW_INSRT_TS
	FROM 
(SELECT 
	ROW_NUMBER() OVER(PARTITION BY ENCNT_SK ORDER BY VLD_FR_TS,MSG_CTRL_ID_TXT,REC_RANK,DW_INSRT_TS) AS R_RANK,
	REC_RANK,
	ENCNT_SK,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK3 WHERE SRC_SYS_REF_CD = 'EPIC' AND COID = '26960' AND TRIM(MESSAGE_TYPE_TRIGGER_EVENT) IN ('A03','A13','A01') 
) S 
LEFT JOIN 
(
SELECT 
	ROW_NUMBER() OVER(PARTITION BY ENCNT_SK ORDER BY VLD_FR_TS,MSG_CTRL_ID_TXT,REC_RANK,DW_INSRT_TS) AS R_RANK,
	REC_RANK,
	ENCNT_SK,
	MSG_CTRL_ID_TXT,
	DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK3 WHERE SRC_SYS_REF_CD = 'EPIC' AND COID = '26960' AND TRIM(MESSAGE_TYPE_TRIGGER_EVENT) IN ('A03','A13','A01') 
) T ON S.ENCNT_SK = T.ENCNT_SK AND S.R_RANK = T.R_RANK - 1
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK3');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK_INS');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK_ADT');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK_DIS');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;


DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK4;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK4
(
	REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	--MESSAGE_TYPE_TRIGGER_EVENT_DIS,
	DW_INSRT_TS
)

SELECT 
	WRK.REC_RANK,
	WRK.ENCNT_SK,
	WRK.VLD_FR_TS,
	WRK.PATIENT_DW_ID,
	WRK.PAT_ACCT_NUM,
	WRK.COMPANY_CODE,
	WRK.COID,
	WRK.VLD_TO_TS,
	WRK.ENCNT_TS,
	--CASE WHEN WRK.SRC_SYS_REF_CD = 'EPIC' AND WRK.COID = '26960' THEN COALESCE(A.ENCNT_TS,NULL) ELSE WRK.ENCNT_TS END AS ENCNT_TS,
	WRK.ENCNT_ID_TXT,
	WRK.ALT_ENCNT_TXT,
	WRK.VST_TYPE_CD_SK,
	WRK.EHR_MED_REC_NUM,
	WRK.EHR_PAT_ACCT_NUM,
	WRK.EHR_MED_URN,
	WRK.PT_OF_ORIG_CD_SK,
	WRK.ARRV_MODE_CD_SK,
	WRK.ADMT_TYPE_REF_CD,
	WRK.ADMT_TS,
	--CASE WHEN WRK.SRC_SYS_REF_CD = 'EPIC' AND WRK.COID = '26960' THEN COALESCE(A.ADMT_TS,NULL) ELSE WRK.ADMT_TS END AS ADMT_TS,
	WRK.ADMT_CMPLN_TXT,
	WRK.RE_ADMT_IND,
	WRK.CNFD_CD_SK,
	WRK.HSPTL_SRVC_CD_SK,
	---WRK.EXPCT_NUM_OF_INS_PLAN_CNT,
	CASE WHEN WRK.SRC_SYS_REF_CD IN ('MEDITECH 6.0', 'EXPANSE') THEN COALESCE(I.EXPCT_NUM_OF_INS_PLAN_CNT,NULL) ELSE WRK.EXPCT_NUM_OF_INS_PLAN_CNT END AS EXPCT_NUM_OF_INS_PLAN_CNT,
	WRK.ACTL_LEN_OF_STAY_DYS_CNT,
	WRK.EMPMNT_ILLNS_IND,
	WRK.ACDNT_AUTO_ST_CD,
	WRK.ACDNT_TYPE_REF_CD,
	WRK.ACDNT_TS,
	WRK.DSCRG_TS,
	--CASE WHEN WRK.SRC_SYS_REF_CD = 'EPIC' AND WRK.COID = '26960' THEN COALESCE(S.DSCRG_TS,NULL) ELSE WRK.DSCRG_TS END AS DSCRG_TS,
	WRK.DSCRG_STS_CD_SK,
	--CASE WHEN WRK.SRC_SYS_REF_CD = 'EPIC' AND WRK.COID = '26960' THEN COALESCE(S.DSCRG_STS_CD_SK,0) ELSE WRK.DSCRG_STS_CD_SK END AS DSCRG_STS_CD_SK,
	WRK.PTNT_DTH_TS,
	WRK.PTNT_DTH_IND,
	WRK.PTNT_STS_REF_CD,
	WRK.PTNT_CLASS_REF_CD,
	WRK.PTNT_STS_EFFV_DT,
	WRK.EMR_PTNT_ID,
	WRK.EMR_PTNT_ID_ASSGN_AUTH,
	WRK.SPCL_PGM_CD_SK,
	WRK.PRTY_REF_CD,
	WRK.SIG_DT,
	WRK.ADV_DRTCV_PRSNT_TXT,
	WRK.EFFV_FR_DT,
	WRK.EFFV_TO_DT,
	WRK.TYPE_REF_CD,
	WRK.ACCOM_REF_CD,
	WRK.SRC_SYS_REF_CD,
	WRK.SRC_SYS_UNQ_KEY_TXT,
	WRK.CRT_RUN_ID,
	WRK.LST_UPDT_RUN_ID,
	WRK.MSG_CTRL_ID_TXT,
	WRK.MESSAGE_TYPE_TRIGGER_EVENT,
	--WRK.MESSAGE_TYPE_TRIGGER_EVENT_DIS,
	WRK.DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK3 WRK
LEFT JOIN EDWCDM_STAGING.ENCNT_DTL_WRK_DIS S 
ON WRK.ENCNT_SK = S.ENCNT_SK AND WRK.REC_RANK BETWEEN S.REC_RANK AND S.NEXT_RANK -1
LEFT JOIN EDWCDM_STAGING.ENCNT_DTL_WRK_ADT A 
ON WRK.ENCNT_SK = A.ENCNT_SK AND WRK.REC_RANK BETWEEN A.REC_RANK AND A.NEXT_RANK -1
LEFT JOIN EDWCDM_STAGING.ENCNT_DTL_WRK_INS I 
ON WRK.ENCNT_SK = I.ENCNT_SK AND WRK.REC_RANK BETWEEN I.REC_RANK AND I.NEXT_RANK -1
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK4');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

-----------REFORMAT VLD_FM_TS

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK5;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK5
(
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
)

SELECT 
	ENCNT_SK,
	CAST(CAST((SUBSTR(CAST(VLD_FR_TS AS VARCHAR(50)), 1, 19) )  AS TIMESTAMP(6) FORMAT 'YYYY-MM-DD-HH.MI.SS.S(6)') + 	(ROW_NUMBER() OVER(PARTITION BY ENCNT_SK,CAST((SUBSTR(CAST(VLD_FR_TS AS VARCHAR(50)), 1, 19) )  AS TIMESTAMP(6) FORMAT 'YYYY-MM-DD-HH.MI.SS.S(6)') ORDER BY MSG_CTRL_ID_TXT,REC_RANK,DW_INSRT_TS) -1) * INTERVAL   '0.000001' SECOND AS VARCHAR(50)) AS VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK4
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK5');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

-----------CHECK IF SAME RECORD OR CHANGED RECORD

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK6;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK6
(
	REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
)

SELECT 
	ROW_NUMBER() OVER(PARTITION BY ENCNT_SK ORDER BY VLD_FR_TS,DW_INSRT_TS) AS REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	CASE WHEN SRC_SYS_REF_CD = 'EPIC' THEN LAST_VALUE(ACCOM_REF_CD IGNORE NULLS) OVER (PARTITION BY ENCNT_SK ORDER BY VLD_FR_TS ) ELSE ACCOM_REF_CD END AS ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK5
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK6');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

-----------ADD DENSE RANK HERE

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK7;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK7
(
	REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
)

SELECT 
	S.REC_RANK,
	S.ENCNT_SK,
	S.VLD_FR_TS,
	S.PATIENT_DW_ID,
	S.PAT_ACCT_NUM,
	S.COMPANY_CODE,
	S.COID,
	S.VLD_TO_TS,
	S.ENCNT_TS,
	S.ENCNT_ID_TXT,
	S.ALT_ENCNT_TXT,
	S.VST_TYPE_CD_SK,
	S.EHR_MED_REC_NUM,
	S.EHR_PAT_ACCT_NUM,
	S.EHR_MED_URN,
	S.PT_OF_ORIG_CD_SK,
	S.ARRV_MODE_CD_SK,
	S.ADMT_TYPE_REF_CD,
	S.ADMT_TS,
	S.ADMT_CMPLN_TXT,
	S.RE_ADMT_IND,
	S.CNFD_CD_SK,
	S.HSPTL_SRVC_CD_SK,
	S.EXPCT_NUM_OF_INS_PLAN_CNT,
	S.ACTL_LEN_OF_STAY_DYS_CNT,
	S.EMPMNT_ILLNS_IND,
	S.ACDNT_AUTO_ST_CD,
	S.ACDNT_TYPE_REF_CD,
	S.ACDNT_TS,
	S.DSCRG_TS,
	S.DSCRG_STS_CD_SK,
	S.PTNT_DTH_TS,
	S.PTNT_DTH_IND,
	S.PTNT_STS_REF_CD,
	S.PTNT_CLASS_REF_CD,
	S.PTNT_STS_EFFV_DT,
	S.EMR_PTNT_ID,
	S.EMR_PTNT_ID_ASSGN_AUTH,
	S.SPCL_PGM_CD_SK,
	S.PRTY_REF_CD,
	S.SIG_DT,
	S.ADV_DRTCV_PRSNT_TXT,
	S.EFFV_FR_DT,
	S.EFFV_TO_DT,
	S.TYPE_REF_CD,
	S.ACCOM_REF_CD,
	S.SRC_SYS_REF_CD,
	S.SRC_SYS_UNQ_KEY_TXT,
	S.CRT_RUN_ID,
	S.LST_UPDT_RUN_ID,
	S.MSG_CTRL_ID_TXT,
	S.MESSAGE_TYPE_TRIGGER_EVENT,
	S.DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK6 S
LEFT OUTER JOIN EDWCDM_STAGING.ENCNT_DTL_WRK6 T
	ON S.REC_RANK = T.REC_RANK + 1 
	AND S.ENCNT_SK = T.ENCNT_SK 


WHERE 
(
	COALESCE(S.VST_TYPE_CD_SK,'~') NOT = COALESCE(T.VST_TYPE_CD_SK,'~') 
	OR COALESCE(S.PT_OF_ORIG_CD_SK,'~') NOT = COALESCE(T.PT_OF_ORIG_CD_SK,'~') 
	OR COALESCE(S.ARRV_MODE_CD_SK,'~') NOT = COALESCE(T.ARRV_MODE_CD_SK,'~')
	OR COALESCE(S.ENCNT_TS,CAST('1900-01-01 00:00:00' AS TIMESTAMP(0))) <> COALESCE(T.ENCNT_TS,CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)))
	OR COALESCE(S.ADMT_TS,CAST('1900-01-01 00:00:00' AS TIMESTAMP(0))) <> COALESCE(T.ADMT_TS,CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)))
	OR COALESCE(S.ADMT_CMPLN_TXT,'~') NOT = COALESCE(T.ADMT_CMPLN_TXT,'~')
	OR COALESCE(S.RE_ADMT_IND,'~') NOT = COALESCE(T.RE_ADMT_IND,'~')
	OR COALESCE(S.CNFD_CD_SK,'~') NOT = COALESCE(T.CNFD_CD_SK,'~')
	OR COALESCE(S.HSPTL_SRVC_CD_SK,'~') NOT = COALESCE(T.HSPTL_SRVC_CD_SK,'~')
	OR COALESCE(S.EXPCT_NUM_OF_INS_PLAN_CNT,'~') NOT = COALESCE(T.EXPCT_NUM_OF_INS_PLAN_CNT,'~')
	OR COALESCE(S.ACTL_LEN_OF_STAY_DYS_CNT,'~') NOT = COALESCE(T.ACTL_LEN_OF_STAY_DYS_CNT,'~')
	OR COALESCE(S.DSCRG_TS,CAST('1900-01-01 00:00:00' AS TIMESTAMP(0))) <> COALESCE(T.DSCRG_TS,CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)))
	OR COALESCE(S.DSCRG_STS_CD_SK,'~') NOT = COALESCE(T.DSCRG_STS_CD_SK,'~')
	OR COALESCE(S.PTNT_STS_REF_CD,'~') NOT = COALESCE(T.PTNT_STS_REF_CD,'~')
	OR COALESCE(S.EMR_PTNT_ID_ASSGN_AUTH,'~') NOT = COALESCE(T.EMR_PTNT_ID_ASSGN_AUTH,'~')
	OR COALESCE(S.EMR_PTNT_ID,'~') NOT = COALESCE(T.EMR_PTNT_ID,'~')
	OR COALESCE(S.ADV_DRTCV_PRSNT_TXT,'~') NOT = COALESCE(T.ADV_DRTCV_PRSNT_TXT,'~')
	OR COALESCE(S.ACCOM_REF_CD,'~') NOT = COALESCE(T.ACCOM_REF_CD,'~')
	OR COALESCE(S.ALT_ENCNT_TXT,'~') NOT = COALESCE(T.ALT_ENCNT_TXT,'~')
)
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK7');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_REJ 
(
            ENCNT_SK,
            VLD_FR_TS,
            PATIENT_DW_ID,
            PAT_ACCT_NUM,
            COMPANY_CODE,
            COID,
            VLD_TO_TS,
            ENCNT_TS,
            ENCNT_ID_TXT,
            ALT_ENCNT_TXT,
            VST_TYPE_CD_SK,
            EHR_MED_REC_NUM,
            EHR_PAT_ACCT_NUM,
            EHR_MED_URN,
            PT_OF_ORIG_CD_SK,
            ARRV_MODE_CD_SK,
            ADMT_TYPE_REF_CD,
            ADMT_TS,
            ADMT_CMPLN_TXT,
            RE_ADMT_IND,
            CNFD_CD_SK,
            HSPTL_SRVC_CD_SK,
            EXPCT_NUM_OF_INS_PLAN_CNT,
            ACTL_LEN_OF_STAY_DYS_CNT,
            EMPMNT_ILLNS_IND,
            ACDNT_AUTO_ST_CD,
            ACDNT_TYPE_REF_CD,
            ACDNT_TS,
            DSCRG_TS,
            DSCRG_STS_CD_SK,
            PTNT_DTH_TS,
            PTNT_DTH_IND,
            PTNT_STS_REF_CD,
            PTNT_CLASS_REF_CD,
            PTNT_STS_EFFV_DT,
            EMR_PTNT_ID,
            EMR_PTNT_ID_ASSGN_AUTH,
            SPCL_PGM_CD_SK,
            PRTY_REF_CD,
            SIG_DT,
            ADV_DRTCV_PRSNT_TXT,
            EFFV_FR_DT,
            EFFV_TO_DT,
            TYPE_REF_CD,
			ACCOM_REF_CD,
            SRC_SYS_REF_CD,
            SRC_SYS_UNQ_KEY_TXT,
            CRT_RUN_ID,
            LST_UPDT_RUN_ID,
            MSG_CTRL_ID_TXT,
            SRC_MESSAGE_TYPE_TRIGGER_EVENT,
            REPROCESS_IND,
            DW_INSRT_TS
)
SELECT 
DISTINCT 
            ENCNT_SK,
            VLD_FR_TS,
            PATIENT_DW_ID,
            PAT_ACCT_NUM,
            COMPANY_CODE,
            COID,
            VLD_TO_TS,
            ENCNT_TS,
            ENCNT_ID_TXT,
            ALT_ENCNT_TXT,
            VST_TYPE_CD_SK,
            EHR_MED_REC_NUM,
            EHR_PAT_ACCT_NUM,
            EHR_MED_URN,
            PT_OF_ORIG_CD_SK,
            ARRV_MODE_CD_SK,
            ADMT_TYPE_REF_CD,
            ADMT_TS,
            ADMT_CMPLN_TXT,
            RE_ADMT_IND,
            CNFD_CD_SK,
            HSPTL_SRVC_CD_SK,
            EXPCT_NUM_OF_INS_PLAN_CNT,
            ACTL_LEN_OF_STAY_DYS_CNT,
            EMPMNT_ILLNS_IND,
            ACDNT_AUTO_ST_CD,
            ACDNT_TYPE_REF_CD,
            ACDNT_TS,
            DSCRG_TS,
            DSCRG_STS_CD_SK,
            PTNT_DTH_TS,
            PTNT_DTH_IND,
            PTNT_STS_REF_CD,
            PTNT_CLASS_REF_CD,
            PTNT_STS_EFFV_DT,
            EMR_PTNT_ID,
            EMR_PTNT_ID_ASSGN_AUTH,
            SPCL_PGM_CD_SK,
            PRTY_REF_CD,
            SIG_DT,
            ADV_DRTCV_PRSNT_TXT,
            EFFV_FR_DT,
            EFFV_TO_DT,
            TYPE_REF_CD,
			ACCOM_REF_CD,
            SRC_SYS_REF_CD,
            SRC_SYS_UNQ_KEY_TXT,
            CRT_RUN_ID,
            LST_UPDT_RUN_ID,
            MSG_CTRL_ID_TXT,
            MESSAGE_TYPE_TRIGGER_EVENT,
            'NO CHANGE IN CDC FIELDS' AS REPROCESS_IND,
            DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK6  WHERE (COALESCE(MSG_CTRL_ID_TXT,'')) NOT IN 
( SELECT COALESCE(MSG_CTRL_ID_TXT,'') AS MSG_CTRL_ID_TXT FROM EDWCDM_STAGING.ENCNT_DTL_WRK7
UNION ALL SELECT COALESCE(MSG_CTRL_ID_TXT,'') AS MSG_CTRL_ID_TXT FROM EDWCDM_STAGING.ENCNT_DTL_REJ WHERE REPROCESS_IND = 'NO CHANGE IN CDC FIELDS' 
);

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

UPDATE REJ
FROM 
            EDWCDM_STAGING.ENCNT_DTL_REJ REJ,
            (SELECT MSG_CTRL_ID_TXT, MAX(DW_INSRT_TS) AS DW_INSRT_TS  FROM EDWCDM_STAGING.ENCNT_DTL_WRK6   GROUP BY 1) TGT
SET    REPROCESS_IND = 'REPROCESSED - ' || CAST(TGT.DW_INSRT_TS AS VARCHAR(50))  || ' - ' || TRIM(REPROCESS_IND)
WHERE
            TGT.MSG_CTRL_ID_TXT = REJ.MSG_CTRL_ID_TXT
            AND REJ.REPROCESS_IND NOT= 'NO CHANGE IN CDC FIELDS' 
            AND REJ.REPROCESS_IND NOT LIKE  'REPROCESSED%'
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_REJ');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK8;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

-- ADD DENSE RANK INTO WRK5
INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK8
(
	REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
)

SELECT 
	DENSE_RANK() OVER (PARTITION BY ENCNT_SK ORDER BY VLD_FR_TS) AS REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK7;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK8');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

-----------PERFORM THE DELAYED RECORD AND CDC

DELETE FROM EDWCDM_STAGING.ENCNT_DTL_WRK9;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;


INSERT INTO EDWCDM_STAGING.ENCNT_DTL_WRK9
(
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,
	DW_INSRT_TS
)

SELECT 
	S.ENCNT_SK,
	S.VLD_FR_TS,
	S.PATIENT_DW_ID,
	S.PAT_ACCT_NUM,
	S.COMPANY_CODE,
	S.COID,
	COALESCE( ( T.VLD_FR_TS - INTERVAL '0.000001' SECOND  ) , CAST( '9999-12-31 00:00:00.000000' AS TIMESTAMP( 6 )  ) )  AS  VLD_TO_TS, 
	S.ENCNT_TS,
	S.ENCNT_ID_TXT,
	S.ALT_ENCNT_TXT,
	S.VST_TYPE_CD_SK,
	S.EHR_MED_REC_NUM,
	S.EHR_PAT_ACCT_NUM,
	S.EHR_MED_URN,
	S.PT_OF_ORIG_CD_SK,
	S.ARRV_MODE_CD_SK,
	S.ADMT_TYPE_REF_CD,
	S.ADMT_TS,
	S.ADMT_CMPLN_TXT,
	S.RE_ADMT_IND,
	S.CNFD_CD_SK,
	S.HSPTL_SRVC_CD_SK,
	S.EXPCT_NUM_OF_INS_PLAN_CNT,
	S.ACTL_LEN_OF_STAY_DYS_CNT,
	S.EMPMNT_ILLNS_IND,
	S.ACDNT_AUTO_ST_CD,
	S.ACDNT_TYPE_REF_CD,
	S.ACDNT_TS,
	S.DSCRG_TS,
	S.DSCRG_STS_CD_SK,
	S.PTNT_DTH_TS,
	S.PTNT_DTH_IND,
	S.PTNT_STS_REF_CD,
	S.PTNT_CLASS_REF_CD,
	S.PTNT_STS_EFFV_DT,
	S.EMR_PTNT_ID,
	S.EMR_PTNT_ID_ASSGN_AUTH,
	S.SPCL_PGM_CD_SK,
	S.PRTY_REF_CD,
	S.SIG_DT,
	S.ADV_DRTCV_PRSNT_TXT,
	S.EFFV_FR_DT,
	S.EFFV_TO_DT,
	S.TYPE_REF_CD,
	S.ACCOM_REF_CD,
	S.SRC_SYS_REF_CD,
	S.SRC_SYS_UNQ_KEY_TXT,
	S.CRT_RUN_ID,
	S.LST_UPDT_RUN_ID,
	S.MSG_CTRL_ID_TXT,
	S.MESSAGE_TYPE_TRIGGER_EVENT,
	S.DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK8 S
LEFT OUTER JOIN	EDWCDM_STAGING.ENCNT_DTL_WRK8 T
	ON T.REC_RANK = S.REC_RANK + 1 
	AND S.ENCNT_SK = T.ENCNT_SK;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_WRK9');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;


BT;


DELETE WITH ISOLATED LOADING FROM EDWCDM.ENCNT_DTL
WHERE ---MSG_CTRL_ID_TXT IS NOT NULL AND 
(ENCNT_SK) IN (SEL ENCNT_SK FROM EDWCDM_STAGING.ENCNT_DTL_WRK9);

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;


INSERT WITH ISOLATED LOADING INTO EDWCDM.ENCNT_DTL
(
	--REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	HL7_EV_ID,   
	DW_INSRT_TS
)

SELECT	
	--REC_RANK,
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	--VLD_TO_TS,
	CAST(CAST(VLD_TO_TS AS VARCHAR(19)) AS TIMESTAMP(0)) AS  VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_TYPE_TRIGGER_EVENT,		
	DW_INSRT_TS
FROM	EDWCDM_STAGING.ENCNT_DTL_WRK9
;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;



DELETE FROM EDWCDM_STAGING.ENCNT_DTL_C WHERE REPROCESS_IND='0';

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

INSERT INTO EDWCDM_STAGING.ENCNT_DTL_C
(
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	SRC_MESSAGE_CONTROL_ID,
	SRC_MESSAGE_DATE_TIME,
	SRC_PATIENT_ACCOUNT_NUM,
	SRC_MEDICAL_RECORD_NUM,
	SRC_MEDICAL_RECORD_URN,
	SRC_SENDING_FACILITY,
	SRC_SOURCE_INTERFACE,
	SRC_MESSAGE_TYPE_TRIGGER_EVENT,
	REPROCESS_IND,
	DW_INSRT_TS
)

SELECT 
	ENCNT_SK,
	VLD_FR_TS,
	PATIENT_DW_ID,
	PAT_ACCT_NUM,
	COMPANY_CODE,
	COID,
	VLD_TO_TS,
	ENCNT_TS,
	ENCNT_ID_TXT,
	ALT_ENCNT_TXT,
	VST_TYPE_CD_SK,
	EHR_MED_REC_NUM,
	EHR_PAT_ACCT_NUM,
	EHR_MED_URN,
	PT_OF_ORIG_CD_SK,
	ARRV_MODE_CD_SK,
	ADMT_TYPE_REF_CD,
	ADMT_TS,
	ADMT_CMPLN_TXT,
	RE_ADMT_IND,
	CNFD_CD_SK,
	HSPTL_SRVC_CD_SK,
	EXPCT_NUM_OF_INS_PLAN_CNT,
	ACTL_LEN_OF_STAY_DYS_CNT,
	EMPMNT_ILLNS_IND,
	ACDNT_AUTO_ST_CD,
	ACDNT_TYPE_REF_CD,
	ACDNT_TS,
	DSCRG_TS,
	DSCRG_STS_CD_SK,
	PTNT_DTH_TS,
	PTNT_DTH_IND,
	PTNT_STS_REF_CD,
	PTNT_CLASS_REF_CD,
	PTNT_STS_EFFV_DT,
	EMR_PTNT_ID,
	EMR_PTNT_ID_ASSGN_AUTH,
	SPCL_PGM_CD_SK,
	PRTY_REF_CD,
	SIG_DT,
	ADV_DRTCV_PRSNT_TXT,
	EFFV_FR_DT,
	EFFV_TO_DT,
	TYPE_REF_CD,
	ACCOM_REF_CD,
	SRC_SYS_REF_CD,
	SRC_SYS_UNQ_KEY_TXT,
	CRT_RUN_ID,
	LST_UPDT_RUN_ID,
	MSG_CTRL_ID_TXT,
	MESSAGE_CONTROL_ID,
	MESSAGE_DATE_TIME,
	PATIENT_ACCOUNT_NUM,
	MEDICAL_RECORD_NUM,
	MEDICAL_RECORD_URN,
	SENDING_FACILITY,
	SOURCE_INTERFACE,
	MESSAGE_TYPE_TRIGGER_EVENT,
	'0' AS REPROCESS_IND,
	DW_INSRT_TS
FROM EDWCDM_STAGING.ENCNT_DTL_WRK1
WHERE ENCNT_SK IS NULL OR 
	EHR_PAT_ACCT_NUM IS NULL OR 
	VST_TYPE_CD_SK IS NULL OR
	PT_OF_ORIG_CD_SK IS NULL OR
	ARRV_MODE_CD_SK IS NULL OR
	DSCRG_STS_CD_SK  IS NULL OR
	SPCL_PGM_CD_SK IS NULL OR
	HSPTL_SRVC_CD_SK IS NULL OR
	CNFD_CD_SK IS NULL OR PTNT_CLASS_REF_CD ='SEG_NA';

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;
	
ET;

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;

CALL DBADMIN_PROCS.COLLECT_STATS_TABLE ('EDWCDM_STAGING','ENCNT_DTL_C');

.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;
COLLECT SUMMARY STATS ON ${NCR_TGT_SCHEMA}.ENCNT_DTL;


.LOGOFF;

.EXIT

EOF
